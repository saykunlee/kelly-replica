DATE=$(date +%Y%m%d%T)
BACKUP_DIR=/nas_data/sqlbackup/estimate/
mariadb-dump -u estimate -puny2023 estimate --routines > $BACKUP_DIR"estimate-backup_"$DATE.sql
find $BACKUP_DIR -ctime +3 -exec rm -f {} \;



/* ALTER USER 'root'@'localhost' IDENTIFIED BY 'uny2023';
FLUSH PRIVILEGES;
mysql -u root -puny2023 estimatae < ./z_info/real_dump_20240708 
 */


디비 백업
mariadb-dump -u root  -puny2023 kelly  --routines > ./reser_hiclass-backup.sql     


 디비 복원
 mysql -u root -puny2023 reserHiclass < ./reser_hiclass-backup_20240708.sql 



# CodeIgniter 4 설정 및 Apache Virtual Host 구성 가이드 (CentOS 및 Apache 환경)

이 문서는 CentOS 서버에서 Apache 웹 서버를 사용하여 CodeIgniter 4(CI4) 애플리케이션을 설정하는 방법을 다룹니다. 특히 `public` 디렉터리를 웹 서버의 루트로 설정하고, 기본 URL에서 `/public`을 제거하는 방법에 대해 설명합니다.

## 1. Apache Virtual Host 설정

### Virtual Host 설정 파일 (`vhost.conf`)

다음은 CI4 애플리케이션을 `/public` 디렉터리로 루트 설정하는 `vhost.conf` 예시입니다:

```apache
<VirtualHost *:80>
    DocumentRoot "/home/kelly/public"
    ServerName kelly.unyboard.com
    ServerAlias www.kelly.unyboard.com

    <Directory "/home/kelly/public">
        AllowOverride All
        Options FollowSymLinks
        Require all granted
    </Directory>

    ErrorLog /var/log/httpd/kelly.unyboard.com-error.log
    CustomLog /var/log/httpd/kelly.unyboard.com-access.log combined
</VirtualHost>
```

### 주요 설정 설명

1. **DocumentRoot**: `DocumentRoot`를 `/home/kelly/public`으로 설정하여, CI4의 `public` 디렉터리를 웹 서버의 루트로 지정합니다.

2. **Directory 설정**: `<Directory>` 블록에서 경로를 `/home/kelly/public`으로 설정하여, Apache가 `public` 디렉터리에 접근할 수 있도록 합니다.

3. **Options 설정**: `FollowSymLinks`는 보안 측면에서 안전한 설정입니다.

4. **로그 파일 설정**: `ErrorLog`와 `CustomLog` 지시어를 추가하여, 특정 도메인에 대한 오류 로그와 액세스 로그를 `/var/log/httpd/` 디렉터리에 저장합니다.

### Apache 설정 적용

1. **설정 파일 저장**: 위 설정을 `/etc/httpd/conf.d/` 디렉터리에 저장합니다. 예를 들어, `kelly.unyboard.com.conf`로 저장할 수 있습니다.

2. **Apache 재시작**: 설정을 적용하기 위해 Apache를 재시작합니다:
   ```bash
   sudo systemctl restart httpd
   ```

3. **방화벽 설정 확인**: CentOS에서는 방화벽 설정을 통해 HTTP 트래픽이 허용되는지 확인해야 합니다. 기본적으로 방화벽에서 HTTP 포트를 허용해야 합니다.

   ```bash
   sudo firewall-cmd --permanent --add-service=http
   sudo firewall-cmd --reload
   ```

## 2. CodeIgniter 4 설정

### `index.php` 파일 경로 설정

CI4의 `public/index.php` 파일에서 시스템 디렉터리와 애플리케이션 디렉터리의 경로를 설정합니다.

```php
// Path to the front controller (this file)
define('FCPATH', __DIR__ . DIRECTORY_SEPARATOR);

// LOAD OUR PATHS CONFIG FILE
require FCPATH . '../app/Config/Paths.php';  // 이 경로가 올바르게 설정되어 있는지 확인하세요

$paths = new Config\Paths();

// LOAD THE FRAMEWORK BOOTSTRAP FILE
require $paths->systemDirectory . '/Boot.php';

exit(CodeIgniter\Boot::bootWeb($paths));
```

### `baseURL` 설정

CI4 애플리케이션에서 `baseURL` 설정이 올바르게 설정되어 있어야 합니다. `app/Config/App.php` 파일을 열고, `baseURL` 값을 설정합니다.

```php
public $baseURL = 'http://kelly.unyboard.com/';
```

### `.env` 파일 설정 (선택 사항)

`.env` 파일을 사용 중이라면, 환경 설정을 다음과 같이 추가합니다:

```bash
CI_ENVIRONMENT = production
app.baseURL = 'http://kelly.unyboard.com/'
```

### Apache 모듈 활성화

Apache에서 `mod_rewrite` 모듈이 활성화되어 있는지 확인합니다. `mod_rewrite`는 CI4의 URL 리라이트 기능을 위해 필수적입니다.

**`mod_rewrite` 활성화 (CentOS):**

1. Apache 모듈 목록에서 `rewrite_module`이 활성화되어 있는지 확인합니다:
   ```bash
   sudo httpd -M | grep rewrite
   ```

2. 만약 활성화되어 있지 않다면, `httpd.conf` 파일에서 `mod_rewrite` 모듈을 활성화합니다:
   ```apache
   LoadModule rewrite_module modules/mod_rewrite.so
   ```

3. Apache를 다시 시작합니다:
   ```bash
   sudo systemctl restart httpd
   ```

### `.htaccess` 파일 확인

CI4의 `public/.htaccess` 파일이 올바르게 설정되어 있는지 확인합니다.

```apache
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /

    # Redirect Trailing Slashes...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^(.*)/$ /$1 [L,R=301]

    # Send request to index.php
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteRule ^(.*)$ index.php/$1 [L]
</IfModule>
```

이 설정은 모든 요청을 `index.php`로 리디렉션하며, CI4 애플리케이션이 정상적으로 동작하도록 합니다.

### 파일 및 디렉터리 권한 설정

`writable` 디렉터리와 `public` 디렉터리 내의 파일들이 올바른 권한을 가지고 있는지 확인합니다.

```bash
sudo chown -R apache:apache /home/kelly/writable
sudo chmod -R 775 /home/kelly/writable
```

### 캐시 및 로그 확인

애플리케이션이 정상적으로 동작하지 않으면, `writable/logs` 디렉터리에 있는 로그 파일을 확인하여 문제를 해결합니다.

## 3. 결론

- **보안 강화**: `public` 디렉터리를 루트로 설정하여, 중요한 디렉터리를 외부로부터 보호합니다.
- **SEO 최적화**: 깨끗한 URL 구조를 유지하여 SEO에 긍정적인 영향을 미칩니다.
- **설정 확인**: 각 설정을 정확히 확인하여 애플리케이션이 정상적으로 작동하도록 합니다.

이 가이드를 통해 CentOS와 Apache 환경에서 CI4 애플리케이션을 안전하고 효율적으로 설정할 수 있습니다.